//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Piranha.Analyzers {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Piranha.Analyzers.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complex regions with only one field is not supported..
        /// </summary>
        internal static string InvalidSingleFieldComplexRegionAnalyzerDescription {
            get {
                return ResourceManager.GetString("InvalidSingleFieldComplexRegionAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Piranha does not support single field complex regions. Use a single field region instead..
        /// </summary>
        internal static string InvalidSingleFieldComplexRegionAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("InvalidSingleFieldComplexRegionAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complex regions with only one field is not supported..
        /// </summary>
        internal static string InvalidSingleFieldComplexRegionAnalyzerTitle {
            get {
                return ResourceManager.GetString("InvalidSingleFieldComplexRegionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage of field type as a single field region might not be supported.
        /// </summary>
        internal static string NonSingleFieldRegionAnalyzerDescription {
            get {
                return ResourceManager.GetString("NonSingleFieldRegionAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should not be used as a single field region.
        /// </summary>
        internal static string NonSingleFieldRegionAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("NonSingleFieldRegionAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field type is primarily intended to be used in complex regions.
        /// </summary>
        internal static string NonSingleFieldRegionAnalyzerTitle {
            get {
                return ResourceManager.GetString("NonSingleFieldRegionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [PageType] should only be applied to classes inheriting Page..
        /// </summary>
        internal static string PageTypeAttributeOnlyForClassesInheritingPageAnalyzerDescription {
            get {
                return ResourceManager.GetString("PageTypeAttributeOnlyForClassesInheritingPageAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not extend Page, but is marked with [PageType].
        /// </summary>
        internal static string PageTypeAttributeOnlyForClassesInheritingPageAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("PageTypeAttributeOnlyForClassesInheritingPageAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [PageType] should only be applied to classes inheriting Page..
        /// </summary>
        internal static string PageTypeAttributeOnlyForClassesInheritingPageAnalyzerTitle {
            get {
                return ResourceManager.GetString("PageTypeAttributeOnlyForClassesInheritingPageAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [PostType] should only be applied to classes inheriting Post..
        /// </summary>
        internal static string PostTypeAttributeOnlyForClassesInheritingPostAnalyzerDescription {
            get {
                return ResourceManager.GetString("PostTypeAttributeOnlyForClassesInheritingPostAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not extend Post, but is marked with [PostType].
        /// </summary>
        internal static string PostTypeAttributeOnlyForClassesInheritingPostAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("PostTypeAttributeOnlyForClassesInheritingPostAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [PostType] should only be applied to classes inheriting Post..
        /// </summary>
        internal static string PostTypeAttributeOnlyForClassesInheritingPostAnalyzerTitle {
            get {
                return ResourceManager.GetString("PostTypeAttributeOnlyForClassesInheritingPostAnalyzerTitle", resourceCulture);
            }
        }
    }
}
